import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
class S implements WidgetsLocalizations {
  const S();

  static S current;

  static const GeneratedLocalizationsDelegate delegate =
    GeneratedLocalizationsDelegate();

  static S of(BuildContext context) => Localizations.of<S>(context, S);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get about_app_detail => "\t\t\t\tThe data used in this app is collected from the Ingress website or third organizations, or players. It help players to remember the glyphs and hacklist as soon as possible.Improved your speed and accuracy, gain more generous game rewards.";
  String get about_app_subject => "\t\t\t\tThe Agent Assistant app is an assistant for Ingress new agents.";
  String get about_tks_list => "\t\t\t\tThanks to the powerful support provided by the following open source projects.";
  String get about_tks_ops_website => "Website";
  String get about_tks_osp_name => "OSP Name";
  String get app_name => "Agent Assistant";
  String get edit_menu_save => "Save";
  String get learn_glyph_alisa => "Alias: ";
  String get learn_glyph_alisa_empty => "(None)";
  String get learn_glyph_edit => "Edit";
  String get learn_glyph_name => "Name: ";
  String get learn_glyph_paths => "More path: ";
  String get nav_header_subtitle => "An assistant for new Ingress agent.";
  String get nav_menu_about => "About";
  String get nav_menu_cheat => "Cheat";
  String get nav_menu_feedback => "Feedback";
  String get nav_menu_learn => "Learn";
  String get nav_menu_practise => "Practise";
  String get nav_menu_remember => "Remember";
  String get nav_menu_share => "Share";
  String get nav_menu_statics => "Statics";
  String get nav_share_text => "Learn glyphs and practise all the hack sequences indoor, and improve your performance outdoors. Here is the link https://play.google.com/store/apps/details?id=cn.com.farmcode.ingress.sequence";
  String get no_data => "No Data!";
  String get option_menu_hack_all => "All HackList";
  String get practise_shorthand_label => "Shorthand Tips";
  String get practise_shorthand_tips_hint => "Input your shorthand tips";
  String get practise_switch_hackList => "Switch HackSequence";
  String get splash_loading => "Loading";
  String get statics_glyph_popular => "Popular Glyph Top10";
  String get statics_sequence_level => "Levels Practise Count";
  String get statics_slowest_top => "Slowest Glyph Top10";
  String get statics_wrong_most => "Wrong Most Glyph Top10";
  String get toast_action_exit_yes => "Exit";
  String get toast_edit_error_on_null => "There is something wrong with the action, try later.";
  String get toast_edit_save_fail => "Save failed, try later.";
  String get toast_edit_save_hint => "The modify has not be saved, exit without save?";
  String get toast_edit_save_no_change => "No content changed";
  String get toast_edit_save_success => "Save success";
  String get toast_feedback_no_app => "Sorry, no apps can complete the feedback action.";
  String get toast_practise_list_end => "Current is the last in this Hack Sequences";
  String get toast_practise_list_first => "Current is the first in this Hack Sequences";
  String get toast_share_no_app => "Sorry, no apps can complete the share action.";
  String get tx_search => "Search";
  String statics_num_value(String name, String value) => "$name\nValue: $value";
  String statics_practise_correct(String name, String practise, String correct) => "$name\nPractise: $practise\nCorrect: $correct";
  String statics_time_cost(String name, String time) => "$name\ncost: $time sec";
  String statics_time_cost_correct(String name, String time, String correct) => "$name\nCost: $time sec\nCorrect: $correct";
}

class $ru_RU extends S {
  const $ru_RU();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get edit_menu_save => "Сохранить";
  @override
  String get toast_practise_list_end => "Ток является первым в этом рубить список";
  @override
  String get nav_menu_share => "Предоставить общий доступ";
  @override
  String get toast_edit_error_on_null => "Что-то не так с действием, попробуйте позже.";
  @override
  String get nav_share_text => "Узнайте глифов и практиковать все хак последовательности в помещении, и улучшить производительность на открытом воздухе. Вот ссылка https://play.google.com/store/apps/details?id=cn.com.farmcode.ingress.sequence";
  @override
  String get practise_switch_hackList => "Переключатель";
  @override
  String get about_tks_list => "\t\t\t\tБлагодаря мощной поддержке, предоставляемой следующими проектами с открытым исходным кодом.";
  @override
  String get learn_glyph_paths => "Больше пути: ";
  @override
  String get toast_edit_save_no_change => "Содержимое не изменено";
  @override
  String get about_tks_osp_name => "Имя OSP";
  @override
  String get toast_feedback_no_app => "К сожалению, никакие приложения не могут завершить действие обратной связи.";
  @override
  String get nav_menu_statics => "Статистических";
  @override
  String get nav_menu_about => "О";
  @override
  String get toast_edit_save_success => "Сохранить успех";
  @override
  String get splash_loading => "Загрузка";
  @override
  String get toast_edit_save_hint => "Изменение не сохраняется, выход без сохранения?";
  @override
  String get learn_glyph_alisa_empty => "(Ни один)";
  @override
  String get toast_share_no_app => "К сожалению, никакие приложения не могут завершить акцию.";
  @override
  String get nav_menu_practise => "Практике";
  @override
  String get no_data => "Нет данных!";
  @override
  String get nav_menu_feedback => "Обратной связи";
  @override
  String get about_app_detail => "\t\t\t\tДанные, используемые в этом приложении, собираются с веб-сайта Ingress или третьих организаций или игроков. Это поможет игрокам запомнить глифы и хакеры как можно скорее. Улучшили свою скорость и точность, получите более щедрые награды игры.";
  @override
  String get nav_menu_learn => "Узнать";
  @override
  String get about_app_subject => "\t\t\t\tПриложение Agent Assistant является помощником новых агентов Ingress.";
  @override
  String get learn_glyph_name => "Имя: ";
  @override
  String get about_tks_ops_website => "Сайт";
  @override
  String get toast_practise_list_first => "Ток является последним в этом рубить список";
  @override
  String get toast_edit_save_fail => "Не удалось сохранить, попробуйте позже.";
  @override
  String get nav_header_subtitle => "Помощник для нового агента входящей.";
  @override
  String get nav_menu_remember => "Помните";
  @override
  String get option_menu_hack_all => "Все HackList";
  @override
  String get toast_action_exit_yes => "Выход";
  @override
  String get nav_menu_cheat => "Информация";
  @override
  String get learn_glyph_edit => "Редактировать";
  @override
  String get learn_glyph_alisa => "Алиса: ";
}

class $zh_HK extends S {
  const $zh_HK();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get edit_menu_save => "保存";
  @override
  String get toast_practise_list_end => "當前已經是最後一個入侵序列";
  @override
  String get nav_menu_share => "共用";
  @override
  String get toast_edit_error_on_null => "當前操作行為出現異常，請稍後重試。";
  @override
  String get nav_share_text => "在室內學習銘文並練習所有的駭客序列，從而提升您在戶外的遊戲表現。這裡是連結 HTTPs://play.google.com/store/apps/details?id=cn.com.farmcode.ingress.sequence";
  @override
  String get practise_switch_hackList => "切換入侵序列";
  @override
  String get about_tks_list => "\t\t\t\t\t\t\t\t多謝以下開源項目提供的強大支持:";
  @override
  String get learn_glyph_paths => "更多繪製順序: ";
  @override
  String get toast_edit_save_no_change => "沒有內容被改變";
  @override
  String get about_tks_osp_name => "項目名稱";
  @override
  String get toast_feedback_no_app => "對不起, 沒有應用程式可以完成回饋操作。";
  @override
  String get nav_menu_statics => "統計";
  @override
  String get nav_menu_about => "關於";
  @override
  String get toast_edit_save_success => "保存成功";
  @override
  String get splash_loading => "資料加载中";
  @override
  String get toast_edit_save_hint => "修改的內容尚未保存，不保存退出？";
  @override
  String get learn_glyph_alisa_empty => "（無）";
  @override
  String get toast_share_no_app => "對不起, 沒有應用程式可以完成共用操作。";
  @override
  String get nav_menu_practise => "練習";
  @override
  String get no_data => "冇相關數據！";
  @override
  String get nav_menu_feedback => "回饋";
  @override
  String get about_app_detail => "\t\t\t\t\t\t\t\t此應用程序中使用的數據由 ingress 網站或第三方組織或玩家收集。 它可以幫助玩家盡快記住圖形和入侵序列。 提高你嘅速度和準確性, 獲得更豐富的遊戲獎勵。";
  @override
  String get nav_menu_learn => "學習";
  @override
  String get about_app_subject => "\t\t\t\t\t\t\t\tAgent Assistant應用程式是Ingress新手特工的助手。";
  @override
  String get learn_glyph_name => "名稱: ";
  @override
  String get about_tks_ops_website => "項目網址";
  @override
  String get toast_practise_list_first => "當前已經是第一個入侵序列";
  @override
  String get toast_edit_save_fail => "保存失敗，請稍後重試。";
  @override
  String get nav_header_subtitle => "Ingress新手特工的遊戲助手";
  @override
  String get nav_menu_remember => "記憶";
  @override
  String get option_menu_hack_all => "所有序列";
  @override
  String get toast_action_exit_yes => "退出";
  @override
  String get nav_menu_cheat => "資訊";
  @override
  String get learn_glyph_edit => "修改";
  @override
  String get learn_glyph_alisa => "别名: ";
}

class $zh_TW extends S {
  const $zh_TW();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get edit_menu_save => "保存";
  @override
  String get toast_practise_list_end => "當前已經是最後一個入侵序列";
  @override
  String get nav_menu_share => "分享";
  @override
  String get toast_edit_error_on_null => "當前操作行為出現異常，請稍後重試。";
  @override
  String get nav_share_text => "在室內學習銘文並練習所有的駭客序列，從而提升您在戶外的遊戲表現。這裡是連結 HTTPs://play.google.com/store/apps/details?id=cn.com.farmcode.ingress.sequence";
  @override
  String get practise_switch_hackList => "切換入侵序列";
  @override
  String get about_tks_list => "\t\t\t\t\t\t\t\t多謝以下開源項目提供的強大支持:";
  @override
  String get learn_glyph_paths => "更多繪製順序: ";
  @override
  String get toast_edit_save_no_change => "沒有內容被改變";
  @override
  String get about_tks_osp_name => "項目名稱";
  @override
  String get toast_feedback_no_app => "對不起, 沒有應用程式可以完成回饋操作。";
  @override
  String get nav_menu_statics => "統計";
  @override
  String get nav_menu_about => "關於";
  @override
  String get toast_edit_save_success => "保存成功";
  @override
  String get splash_loading => "資料載入中";
  @override
  String get toast_edit_save_hint => "修改的內容尚未保存，不保存退出？";
  @override
  String get learn_glyph_alisa_empty => "（無）";
  @override
  String get toast_share_no_app => "對不起, 沒有應用程式可以完成分享操作。";
  @override
  String get nav_menu_practise => "練習";
  @override
  String get no_data => "沒有相關資料！";
  @override
  String get nav_menu_feedback => "回饋";
  @override
  String get about_app_detail => "\t\t\t\t\t\t\t\t此應用程式中使用的資料從Ingress網站或協力廠商組織或玩家收集。 它可以説明玩家儘快記住圖形和入侵序列。 提高您的速度和準確性，獲得更豐富的遊戲獎勵。";
  @override
  String get nav_menu_learn => "學習";
  @override
  String get about_app_subject => "\t\t\t\t\t\t\t\tAgent Assistant應用程式是Ingress新手特工的助手。";
  @override
  String get learn_glyph_name => "名稱: ";
  @override
  String get about_tks_ops_website => "項目網址";
  @override
  String get toast_practise_list_first => "當前已經是第一個入侵序列";
  @override
  String get toast_edit_save_fail => "保存失敗，請稍後重試。";
  @override
  String get nav_header_subtitle => "Ingress新手特工的遊戲助手";
  @override
  String get nav_menu_remember => "記憶";
  @override
  String get option_menu_hack_all => "所有序列";
  @override
  String get toast_action_exit_yes => "退出";
  @override
  String get nav_menu_cheat => "攻略";
  @override
  String get learn_glyph_edit => "修改";
  @override
  String get learn_glyph_alisa => "别名: ";
}

class $en_US extends S {
  const $en_US();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get edit_menu_save => "Save";
  @override
  String get toast_practise_list_end => "Current is the last in this Hack Sequences";
  @override
  String get nav_menu_share => "Share";
  @override
  String get toast_edit_error_on_null => "There is something wrong with the action, try later.";
  @override
  String get nav_share_text => "Learn glyphs and practise all the hack sequences indoor, and improve your performance outdoors. Here is the link https://play.google.com/store/apps/details?id=cn.com.farmcode.ingress.sequence";
  @override
  String get practise_switch_hackList => "Switch HackSequence";
  @override
  String get about_tks_list => "\t\t\t\tThanks to the powerful support provided by the following open source projects.";
  @override
  String get learn_glyph_paths => "More path: ";
  @override
  String get toast_edit_save_no_change => "No content changed";
  @override
  String get about_tks_osp_name => "OSP Name";
  @override
  String get toast_feedback_no_app => "Sorry, no apps can complete the feedback action.";
  @override
  String get nav_menu_statics => "Statics";
  @override
  String get nav_menu_about => "About";
  @override
  String get toast_edit_save_success => "Save success";
  @override
  String get splash_loading => "Loading";
  @override
  String get toast_edit_save_hint => "The modify has not be saved, exit without save?";
  @override
  String get learn_glyph_alisa_empty => "(None)";
  @override
  String get toast_share_no_app => "Sorry, no apps can complete the share action.";
  @override
  String get nav_menu_practise => "Practise";
  @override
  String get no_data => "No Data!";
  @override
  String get nav_menu_feedback => "Feedback";
  @override
  String get about_app_detail => "\t\t\t\tThe data used in this app is collected from the Ingress website or third organizations, or players. It help players to remember the glyphs and hacklist as soon as possible.Improved your speed and accuracy, gain more generous game rewards.";
  @override
  String get nav_menu_learn => "Learn";
  @override
  String get about_app_subject => "\t\t\t\tThe Agent Assistant app is an assistant for Ingress new agents.";
  @override
  String get learn_glyph_name => "Name: ";
  @override
  String get about_tks_ops_website => "Website";
  @override
  String get toast_practise_list_first => "Current is the first in this Hack Sequences";
  @override
  String get toast_edit_save_fail => "Save failed, try later.";
  @override
  String get nav_header_subtitle => "An assistant for new Ingress agent.";
  @override
  String get nav_menu_remember => "Remember";
  @override
  String get option_menu_hack_all => "All HackList";
  @override
  String get toast_action_exit_yes => "Exit";
  @override
  String get nav_menu_cheat => "Cheat";
  @override
  String get learn_glyph_edit => "Edit";
  @override
  String get learn_glyph_alisa => "Alias: ";
}

class $en extends S {
  const $en();
}

class $pt_BR extends S {
  const $pt_BR();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get edit_menu_save => "Salvar";
  @override
  String get toast_practise_list_end => "Atual é o primeiro nesta lista de hack";
  @override
  String get nav_menu_share => "Compartilhar";
  @override
  String get toast_edit_error_on_null => "Há algo de errado com a ação, tente mais tarde.";
  @override
  String get nav_share_text => "Aprenda glifos e pratique todas as sequências de hackers dentro de casa e melhore seu desempenho ao ar livre. Aqui está o link https://play.google.com/store/apps/details?id=cn.com.farmcode.ingress.sequence";
  @override
  String get practise_switch_hackList => "Switch HackList";
  @override
  String get about_tks_list => "\t\t\t\tGraças ao poderoso apoio prestado pelos seguintes projetos de código aberto.";
  @override
  String get learn_glyph_paths => "Mais caminho: ";
  @override
  String get toast_edit_save_no_change => "Nenhum conteúdo alterado";
  @override
  String get about_tks_osp_name => "Nome OSP";
  @override
  String get toast_feedback_no_app => "Pesaroso, nenhum apps pode terminar a pação do gabarito.";
  @override
  String get nav_menu_statics => "Estatística";
  @override
  String get nav_menu_about => "Sobre";
  @override
  String get toast_edit_save_success => "Salvar o sucesso";
  @override
  String get splash_loading => "Carregar";
  @override
  String get toast_edit_save_hint => "A modificação não foi salva, Exit sem salvar?";
  @override
  String get learn_glyph_alisa_empty => "(Nenhum)";
  @override
  String get toast_share_no_app => "Pesaroso, nenhum apps pode terminar a ação da parte.";
  @override
  String get nav_menu_practise => "Praticar";
  @override
  String get no_data => "Sem dados!";
  @override
  String get nav_menu_feedback => "Feedback";
  @override
  String get about_app_detail => "\t\t\t\tOs dados utilizados neste aplicativo são coletados no site da Ingress ou em terceiros organizações, ou jogadores. Ele ajuda os jogadores a lembrar os glifos e hacklist o mais rapidamente possível. Melhorou sua velocidade e precisão, ganhar recompensas de jogo mais generosos.";
  @override
  String get nav_menu_learn => "Aprender";
  @override
  String get about_app_subject => "\t\t\t\tO aplicativo Assistente de Agente é assistente de novos agentes da Ingress.";
  @override
  String get learn_glyph_name => "Nome: ";
  @override
  String get about_tks_ops_website => "Site";
  @override
  String get toast_practise_list_first => "Atual é o último nesta lista de hack";
  @override
  String get toast_edit_save_fail => "Salvar falhou, tente mais tarde.";
  @override
  String get nav_header_subtitle => "Um assistente de jogo para um agente novato de ingresso.";
  @override
  String get nav_menu_remember => "Lembrar";
  @override
  String get option_menu_hack_all => "Todos hacklist";
  @override
  String get toast_action_exit_yes => "Saída";
  @override
  String get nav_menu_cheat => "Informações";
  @override
  String get learn_glyph_edit => "Editar";
  @override
  String get learn_glyph_alisa => "Alisa: ";
}

class $zh_CN extends S {
  const $zh_CN();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get edit_menu_save => "保存";
  @override
  String get toast_practise_list_end => "当前已经是最后一个入侵序列";
  @override
  String get nav_menu_share => "分享";
  @override
  String get toast_edit_error_on_null => "当前操作行为出现异常，请稍后重试。";
  @override
  String get nav_share_text => "在室内学习铭文并练习所有的入侵序列，从而提升您在户外的游戏表现。这里是链接 https://play.google.com/store/apps/details?id=cn.com.farmcode.ingress.sequence";
  @override
  String get practise_switch_hackList => "切换入侵序列";
  @override
  String get about_tks_list => "\t\t\t\t\t\t\t\t感谢以下开源项目提供的强大支持:";
  @override
  String get learn_glyph_paths => "更多绘制顺序: ";
  @override
  String get toast_edit_save_no_change => "内容未改变";
  @override
  String get about_tks_osp_name => "项目名称";
  @override
  String get toast_feedback_no_app => "对不起, 未发现应用程序可以完成反馈操作。";
  @override
  String get nav_menu_statics => "统计";
  @override
  String get nav_menu_about => "关于";
  @override
  String get toast_edit_save_success => "保存成功";
  @override
  String get splash_loading => "数据加载中";
  @override
  String get toast_edit_save_hint => "修改的内容尚未保存，不保存退出？";
  @override
  String get learn_glyph_alisa_empty => "（无）";
  @override
  String get toast_share_no_app => "对不起, 未发现应用程序可以完成分享操作。";
  @override
  String get nav_menu_practise => "练习";
  @override
  String get no_data => "没有相关数据！";
  @override
  String get nav_menu_feedback => "反馈";
  @override
  String get about_app_detail => "\t\t\t\t\t\t\t\t此应用程序中使用的数据从Ingress网站或第三方组织或玩家收集。它可以帮助玩家尽快记住图形和入侵序列。提高您的速度和准确性，获得更丰富的游戏奖励。";
  @override
  String get nav_menu_learn => "学习";
  @override
  String get about_app_subject => "\t\t\t\t\t\t\t\tAgent Assistant应用程序是Ingress新手特工的助手。";
  @override
  String get learn_glyph_name => "名称: ";
  @override
  String get about_tks_ops_website => "项目地址";
  @override
  String get toast_practise_list_first => "当前已经是第一个入侵序列";
  @override
  String get toast_edit_save_fail => "保存失败，请稍后重试。";
  @override
  String get nav_header_subtitle => "Ingress新手特工的游戏助手";
  @override
  String get nav_menu_remember => "记忆";
  @override
  String get option_menu_hack_all => "所有序列";
  @override
  String get toast_action_exit_yes => "退出";
  @override
  String get nav_menu_cheat => "攻略";
  @override
  String get learn_glyph_edit => "修改";
  @override
  String get learn_glyph_alisa => "别名: ";
}

class $fr_FR extends S {
  const $fr_FR();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get edit_menu_save => "Sauver";
  @override
  String get toast_practise_list_end => "Le courant est le premier dans cette liste de hack";
  @override
  String get nav_menu_share => "Partager";
  @override
  String get toast_edit_error_on_null => "Il ya quelque chose de mal avec l'action, essayez plus tard.";
  @override
  String get nav_share_text => "Apprenez les glyphes et pratiquez toutes les séquences de hack à l'intérieur, et améliorez vos performances à l'extérieur. Voici le lien https://play.google.com/store/apps/details?id=cn.com.farmcode.ingress.sequence";
  @override
  String get practise_switch_hackList => "Commutateur HackList";
  @override
  String get about_tks_list => "\t\t\t\tGrâce au soutien puissant apporté par les projets open source suivants.";
  @override
  String get learn_glyph_paths => "Plus de chemin: ";
  @override
  String get toast_edit_save_no_change => "Aucun contenu modifié";
  @override
  String get about_tks_osp_name => "Nom OSP";
  @override
  String get toast_feedback_no_app => "Désolé, aucune apps ne peut compléter l'action de rétroaction.";
  @override
  String get nav_menu_statics => "Statistique";
  @override
  String get nav_menu_about => "Sur";
  @override
  String get toast_edit_save_success => "Enregistrer le succès";
  @override
  String get splash_loading => "Chargement";
  @override
  String get toast_edit_save_hint => "La modification n'a pas été sauvegardée, quitter sans enregistrer?";
  @override
  String get learn_glyph_alisa_empty => "(Aucun)";
  @override
  String get toast_share_no_app => "Désolé, aucune apps ne peut terminer l'action de partage.";
  @override
  String get nav_menu_practise => "Pratiquer";
  @override
  String get no_data => "Aucune donnée！";
  @override
  String get nav_menu_feedback => "Commentaires";
  @override
  String get about_app_detail => "\t\t\t\tLes données utilisées dans cette application sont collectées sur le site Web d'Ingress ou sur des organisations tierces, ou des joueurs. Il aide les joueurs à se souvenir des glyphes et hacklist dès que possible. Améliorez votre vitesse et votre précision, gagnez des récompenses de jeu plus généreuses.";
  @override
  String get nav_menu_learn => "Apprendre";
  @override
  String get about_app_subject => "\t\t\t\tL'application Agent Assistant est une assistante pour les nouveaux agents d'Ingress.";
  @override
  String get learn_glyph_name => "Nom: ";
  @override
  String get about_tks_ops_website => "site internet";
  @override
  String get toast_practise_list_first => "Current est le dernier dans cette liste de hack";
  @override
  String get toast_edit_save_fail => "L'enregistrement a échoué, essayez plus tard.";
  @override
  String get nav_header_subtitle => "Un Assistant pour un nouvel agent d'infiltration.";
  @override
  String get nav_menu_remember => "Rappelez-vous";
  @override
  String get option_menu_hack_all => "Tous les HackList";
  @override
  String get toast_action_exit_yes => "Sortie";
  @override
  String get nav_menu_cheat => "Informations";
  @override
  String get learn_glyph_edit => "Modifier";
  @override
  String get learn_glyph_alisa => "Alisa: ";
}

class $ja_JP extends S {
  const $ja_JP();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get edit_menu_save => "保存";
  @override
  String get toast_practise_list_end => "現在は、このハックリストの最後です";
  @override
  String get nav_menu_share => "共有";
  @override
  String get toast_edit_error_on_null => "行動に何か問題があり、後で試してみてください。";
  @override
  String get nav_share_text => "グリフを学び、屋内ですべてのハックシーケンスを練習し、屋外であなたのパフォーマンスを向上させます。リンクhttps://play.google.com/store/apps/details?id=cn.com.farmcode.ingress.sequence";
  @override
  String get practise_switch_hackList => "ハックリストの切り替え";
  @override
  String get about_tks_list => "\t\t\t\t次のオープンソースプロジェクトが提供する強力なサポートのおかげです。";
  @override
  String get learn_glyph_paths => "その他のパス: ";
  @override
  String get toast_edit_save_no_change => "コンテンツが変更されない";
  @override
  String get about_tks_osp_name => "OSP 名";
  @override
  String get toast_feedback_no_app => "アプリはフィードバックアクションを完了できません。";
  @override
  String get nav_menu_statics => "統計";
  @override
  String get nav_menu_about => "に関しては";
  @override
  String get toast_edit_save_success => "成功の保存";
  @override
  String get splash_loading => "読み込み";
  @override
  String get toast_edit_save_hint => "変更は保存されていません。";
  @override
  String get learn_glyph_alisa_empty => "(なし)";
  @override
  String get toast_share_no_app => "アプリが共有アクションを完了できません。";
  @override
  String get nav_menu_practise => "練習";
  @override
  String get no_data => "データなし!";
  @override
  String get nav_menu_feedback => "フィードバック";
  @override
  String get about_app_detail => "\t\t\t\tこのアプリで使用されるデータは、Ingressのウェブサイトや第三の組織、またはプレイヤーから収集されます。これは、プレイヤーができるだけ早くグリフやハックリストを覚えておくのに役立ちます。あなたのスピードと精度を向上させ、より寛大なゲームの報酬を得ます。";
  @override
  String get nav_menu_learn => "学ぶ";
  @override
  String get about_app_subject => "\t\t\t\tエージェント アシスタント アプリは、Ingress の新しいエージェントのアシスタントです。";
  @override
  String get learn_glyph_name => "名前: ";
  @override
  String get about_tks_ops_website => "ウェブサイト";
  @override
  String get toast_practise_list_first => "現在のこのハックリストの最初の";
  @override
  String get toast_edit_save_fail => "保存に失敗しました。";
  @override
  String get nav_header_subtitle => "Ingress初心者エージェントのためのゲームアシスタント。";
  @override
  String get nav_menu_remember => "覚えて";
  @override
  String get option_menu_hack_all => "すべてのハックリスト";
  @override
  String get toast_action_exit_yes => "終了";
  @override
  String get nav_menu_cheat => "情報";
  @override
  String get learn_glyph_edit => "編集";
  @override
  String get learn_glyph_alisa => "アリサ: ";
}

class $de_DE extends S {
  const $de_DE();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get edit_menu_save => "Speichern";
  @override
  String get toast_practise_list_end => "Current ist die erste in diesem Hack-Liste";
  @override
  String get nav_menu_share => "Freigeben";
  @override
  String get toast_edit_error_on_null => "Es ist etwas falsch mit der Aktion, versuchen Sie es später.";
  @override
  String get nav_share_text => "Lerne Glyphen und übe alle Hack-Sequenzen drinnen und verbessere deine Leistung im Freien. Hier ist der Link https://play.google.com/store/apps/details?id=cn.com.farmcode.ingress.sequence";
  @override
  String get practise_switch_hackList => "Switch HackList";
  @override
  String get about_tks_list => "\t\t\t\tDank der leistungsstarken Unterstützung durch die folgenden Open-Source-Projekte.";
  @override
  String get learn_glyph_paths => "Mehr Pfad: ";
  @override
  String get toast_edit_save_no_change => "Kein Inhalt geändert";
  @override
  String get about_tks_osp_name => "OSP-Name";
  @override
  String get toast_feedback_no_app => "Leider können keine apps die Feedback Aktion abschließen.";
  @override
  String get nav_menu_statics => "Statistische";
  @override
  String get nav_menu_about => "Über";
  @override
  String get toast_edit_save_success => "Erfolg sparen";
  @override
  String get splash_loading => "Laden";
  @override
  String get toast_edit_save_hint => "Die Änderung wurde nicht gespeichert, Exit Without Save?";
  @override
  String get learn_glyph_alisa_empty => "(Keine)";
  @override
  String get toast_share_no_app => "Leider können keine apps die Freigabe Aktion abschließen.";
  @override
  String get nav_menu_practise => "Üben";
  @override
  String get no_data => "Keine Daten！";
  @override
  String get nav_menu_feedback => "Feedback";
  @override
  String get about_app_detail => "\t\t\t\tDie in dieser App verwendeten Daten werden von der Ingress-Website oder von dritten Organisationen oder Spielern gesammelt. Es hilft Spielern, sich die Glyphen und Hackliste so schnell wie möglich zu merken. Verbesserte Geschwindigkeit und Genauigkeit, erhalten sie großzügigere Spielbelohnungen.";
  @override
  String get nav_menu_learn => "Lernen";
  @override
  String get about_app_subject => "\t\t\t\tDie Agent Assistant-App ist ein Assistent für neue Agenten von Ingress.";
  @override
  String get learn_glyph_name => "Namen: ";
  @override
  String get about_tks_ops_website => "Website";
  @override
  String get toast_practise_list_first => "Current ist der letzte in diesem Hack-Liste";
  @override
  String get toast_edit_save_fail => "Speichern fehlgeschlagen, versuchen Sie es später.";
  @override
  String get nav_header_subtitle => "Ein Assistent für neue Ingress Agent.";
  @override
  String get nav_menu_remember => "Erinnern";
  @override
  String get option_menu_hack_all => "Alle HackList";
  @override
  String get toast_action_exit_yes => "Ausfahrt";
  @override
  String get nav_menu_cheat => "Informationen";
  @override
  String get learn_glyph_edit => "Bearbeiten";
  @override
  String get learn_glyph_alisa => "Alisa: ";
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<S> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("ru", "RU"),
      Locale("zh", "HK"),
      Locale("zh", "TW"),
      Locale("en", "US"),
      Locale("en", ""),
      Locale("pt", "BR"),
      Locale("zh", "CN"),
      Locale("fr", "FR"),
      Locale("ja", "JP"),
      Locale("de", "DE"),
    ];
  }

  LocaleListResolutionCallback listResolution({Locale fallback, bool withCountry = true}) {
    return (List<Locale> locales, Iterable<Locale> supported) {
      if (locales == null || locales.isEmpty) {
        return fallback ?? supported.first;
      } else {
        return _resolve(locales.first, fallback, supported, withCountry);
      }
    };
  }

  LocaleResolutionCallback resolution({Locale fallback, bool withCountry = true}) {
    return (Locale locale, Iterable<Locale> supported) {
      return _resolve(locale, fallback, supported, withCountry);
    };
  }

  @override
  Future<S> load(Locale locale) {
    final String lang = getLang(locale);
    if (lang != null) {
      switch (lang) {
        case "ru_RU":
          S.current = const $ru_RU();
          return SynchronousFuture<S>(S.current);
        case "zh_HK":
          S.current = const $zh_HK();
          return SynchronousFuture<S>(S.current);
        case "zh_TW":
          S.current = const $zh_TW();
          return SynchronousFuture<S>(S.current);
        case "en_US":
          S.current = const $en_US();
          return SynchronousFuture<S>(S.current);
        case "en":
          S.current = const $en();
          return SynchronousFuture<S>(S.current);
        case "pt_BR":
          S.current = const $pt_BR();
          return SynchronousFuture<S>(S.current);
        case "zh_CN":
          S.current = const $zh_CN();
          return SynchronousFuture<S>(S.current);
        case "fr_FR":
          S.current = const $fr_FR();
          return SynchronousFuture<S>(S.current);
        case "ja_JP":
          S.current = const $ja_JP();
          return SynchronousFuture<S>(S.current);
        case "de_DE":
          S.current = const $de_DE();
          return SynchronousFuture<S>(S.current);
        default:
          // NO-OP.
      }
    }
    S.current = const S();
    return SynchronousFuture<S>(S.current);
  }

  @override
  bool isSupported(Locale locale) => _isSupported(locale, true);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;

  ///
  /// Internal method to resolve a locale from a list of locales.
  ///
  Locale _resolve(Locale locale, Locale fallback, Iterable<Locale> supported, bool withCountry) {
    if (locale == null || !_isSupported(locale, withCountry)) {
      return fallback ?? supported.first;
    }

    final Locale languageLocale = Locale(locale.languageCode, "");
    if (supported.contains(locale)) {
      return locale;
    } else if (supported.contains(languageLocale)) {
      return languageLocale;
    } else {
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    }
  }

  ///
  /// Returns true if the specified locale is supported, false otherwise.
  ///
  bool _isSupported(Locale locale, bool withCountry) {
    if (locale != null) {
      for (Locale supportedLocale in supportedLocales) {
        // Language must always match both locales.
        if (supportedLocale.languageCode != locale.languageCode) {
          continue;
        }

        // If country code matches, return this locale.
        if (supportedLocale.countryCode == locale.countryCode) {
          return true;
        }

        // If no country requirement is requested, check if this locale has no country.
        if (true != withCountry && (supportedLocale.countryCode == null || supportedLocale.countryCode.isEmpty)) {
          return true;
        }
      }
    }
    return false;
  }
}

String getLang(Locale l) => l == null
  ? null
  : l.countryCode != null && l.countryCode.isEmpty
    ? l.languageCode
    : l.toString();
